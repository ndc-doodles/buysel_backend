# Generated by Django 5.2 on 2025-06-06 11:16

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('phone_number', models.CharField(max_length=12)),
                ('Dealings', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='agent-image')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_head', models.CharField(max_length=100)),
                ('modal_head', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('card_paragraph', models.TextField()),
                ('modal_paragraph', models.TextField()),
                ('image', models.ImageField(upload_to='blogs')),
            ],
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Caption', models.CharField(max_length=100)),
                ('total_land', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.CharField(max_length=50)),
                ('address', models.TextField(max_length=500)),
                ('description', models.TextField(max_length=500)),
                ('land_mark', models.TextField(max_length=100)),
                ('sequrity_deposit', models.CharField(blank=True, max_length=50, null=True)),
                ('Time_perioud', models.CharField(blank=True, max_length=50, verbose_name='Time Period')),
                ('location', models.TextField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Sold', 'Sold')], default='Available', max_length=10)),
                ('disabled', models.BooleanField(default=False)),
                ('amenities', models.TextField(max_length=500)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('screenshot', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Caption', models.CharField(max_length=100)),
                ('total_land', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.CharField(max_length=50)),
                ('house_area', models.CharField(max_length=50)),
                ('address', models.TextField(max_length=500)),
                ('description', models.TextField(max_length=500)),
                ('furnished', models.BooleanField(default=False, verbose_name='Is Furnished?')),
                ('land_mark', models.TextField(max_length=100)),
                ('Bedroom', models.CharField(max_length=10)),
                ('Bathroom', models.CharField(max_length=10)),
                ('Kitchen', models.BooleanField(default=False)),
                ('allowed_persons', models.IntegerField(blank=True, null=True, verbose_name='Allowed Persons')),
                ('sequrity_deposit', models.CharField(blank=True, max_length=50, null=True)),
                ('Time_perioud', models.CharField(blank=True, max_length=50, verbose_name='Time Period')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('mixed', 'mixed')], default='male', max_length=50)),
                ('location', models.TextField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Sold', 'Sold')], default='Available', max_length=10)),
                ('disabled', models.BooleanField(default=False, verbose_name='Is Disabled?')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('screenshot', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Caption', models.CharField(max_length=100)),
                ('total_land', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.CharField(max_length=50)),
                ('space_area', models.CharField(max_length=50)),
                ('address', models.TextField(max_length=500)),
                ('description', models.TextField(max_length=500)),
                ('land_mark', models.TextField(max_length=100)),
                ('sequrity_deposit', models.CharField(blank=True, max_length=50, null=True)),
                ('Time_perioud', models.CharField(blank=True, max_length=50, verbose_name='Time Period')),
                ('location', models.TextField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Sold', 'Sold')], default='Available', max_length=10)),
                ('disabled', models.BooleanField(default=False)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('screenshot', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catgory', models.CharField(choices=[('Sale', 'Sale'), ('Rent', 'Rent'), ('Resell', 'Resell'), ('Lease', 'Lease')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Propertylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(max_length=100)),
                ('locations', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=50)),
                ('about_the_property', models.TextField()),
                ('image', models.ImageField(upload_to='property-image')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rate_limit', models.IntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CommercialImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('commercial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='developer.commercial')),
            ],
        ),
        migrations.CreateModel(
            name='HouseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='developer.house')),
            ],
        ),
        migrations.CreateModel(
            name='LandImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='developer.land')),
            ],
        ),
        migrations.AddField(
            model_name='land',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.maincategory'),
        ),
        migrations.AddField(
            model_name='house',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.maincategory'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.maincategory'),
        ),
        migrations.CreateModel(
            name='OffPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Caption', models.CharField(max_length=100)),
                ('total_land', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.CharField(max_length=50)),
                ('address', models.TextField(max_length=500)),
                ('description', models.TextField(max_length=500)),
                ('rooms', models.CharField(max_length=10)),
                ('land_mark', models.TextField(max_length=100)),
                ('location', models.TextField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Sold', 'Sold')], default='Available', max_length=10)),
                ('disabled', models.BooleanField(default=False)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('screenshot', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.maincategory')),
            ],
        ),
        migrations.CreateModel(
            name='OffplanImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('offplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='developer.offplan')),
            ],
        ),
    ]
